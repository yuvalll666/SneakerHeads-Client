[{"C:\\MyCode\\client\\src\\index.js":"1","C:\\MyCode\\client\\src\\DataContext.js":"2","C:\\MyCode\\client\\src\\serviceWorker.js":"3","C:\\MyCode\\client\\src\\App.jsx":"4","C:\\MyCode\\client\\src\\DeletedUserContext.js":"5","C:\\MyCode\\client\\src\\components\\Confirmation.js":"6","C:\\MyCode\\client\\src\\services\\userService.js":"7","C:\\MyCode\\client\\src\\components\\About.jsx":"8","C:\\MyCode\\client\\src\\components\\Step2.jsx":"9","C:\\MyCode\\client\\src\\components\\Navbar.jsx":"10","C:\\MyCode\\client\\src\\components\\Step1.jsx":"11","C:\\MyCode\\client\\src\\components\\Home.jsx":"12","C:\\MyCode\\client\\src\\components\\Result.jsx":"13","C:\\MyCode\\client\\src\\components\\Logout.jsx":"14","C:\\MyCode\\client\\src\\components\\UserPage.jsx":"15","C:\\MyCode\\client\\src\\components\\Signin.jsx":"16","C:\\MyCode\\client\\src\\components\\Footer.jsx":"17","C:\\MyCode\\client\\src\\components\\ProductPage.jsx":"18","C:\\MyCode\\client\\src\\components\\HistoryPage.jsx":"19","C:\\MyCode\\client\\src\\components\\CartPage.jsx":"20","C:\\MyCode\\client\\src\\components\\ProductsLandingPage.jsx":"21","C:\\MyCode\\client\\src\\components\\UploadProduct.jsx":"22","C:\\MyCode\\client\\src\\components\\admin\\SingleUser.jsx":"23","C:\\MyCode\\client\\src\\components\\admin\\AllUsers.jsx":"24","C:\\MyCode\\client\\src\\components\\admin\\Payments.jsx":"25","C:\\MyCode\\client\\src\\components\\admin\\HandleProductsPage.jsx":"26","C:\\MyCode\\client\\src\\components\\admin\\UpdateProduct.jsx":"27","C:\\MyCode\\client\\src\\components\\brands\\Jordan.jsx":"28","C:\\MyCode\\client\\src\\components\\brands\\Nike.jsx":"29","C:\\MyCode\\client\\src\\components\\brands\\Yeezy.jsx":"30","C:\\MyCode\\client\\src\\components\\brands\\Adidas.jsx":"31","C:\\MyCode\\client\\src\\services\\httpService.js":"32","C:\\MyCode\\client\\src\\datas.js":"33","C:\\MyCode\\client\\src\\components\\forms\\MainContainer.js":"34","C:\\MyCode\\client\\src\\components\\forms\\Form.js":"35","C:\\MyCode\\client\\src\\components\\forms\\Input.js":"36","C:\\MyCode\\client\\src\\components\\forms\\PrimaryButton.js":"37","C:\\MyCode\\client\\src\\components\\HomePageDetail\\PopularBrands.js":"38","C:\\MyCode\\client\\src\\components\\utils\\PageHeader.jsx":"39","C:\\MyCode\\client\\src\\components\\utils\\HistoryTable.jsx":"40","C:\\MyCode\\client\\src\\components\\utils\\ImageSlider.jsx":"41","C:\\MyCode\\client\\src\\components\\brands\\PageContent.jsx":"42","C:\\MyCode\\client\\src\\components\\productDetails\\ProductInfo.jsx":"43","C:\\MyCode\\client\\src\\components\\productDetails\\ProductCarousel.jsx":"44","C:\\MyCode\\client\\src\\components\\utils\\FileUpload.jsx":"45","C:\\MyCode\\client\\src\\components\\productDetails\\CheckBox.jsx":"46","C:\\MyCode\\client\\src\\components\\productDetails\\RadioBox.jsx":"47","C:\\MyCode\\client\\src\\components\\productDetails\\SearchFeature.jsx":"48","C:\\MyCode\\client\\src\\components\\utils\\Paypal.jsx":"49","C:\\MyCode\\client\\src\\components\\cartDetail\\CartTable.jsx":"50","C:\\MyCode\\client\\src\\firebase\\config.js":"51","C:\\MyCode\\client\\src\\components\\utils\\ProgressBar.jsx":"52","C:\\MyCode\\client\\src\\hooks\\useStorage.js":"53"},{"size":688,"mtime":1609682763474,"results":"54","hashOfConfig":"55"},{"size":711,"mtime":1609682874095,"results":"56","hashOfConfig":"55"},{"size":5227,"mtime":1609683031200,"results":"57","hashOfConfig":"55"},{"size":4197,"mtime":1611350108343,"results":"58","hashOfConfig":"55"},{"size":645,"mtime":1609682882337,"results":"59","hashOfConfig":"55"},{"size":866,"mtime":1611350004761,"results":"60","hashOfConfig":"55"},{"size":1170,"mtime":1609774818356,"results":"61","hashOfConfig":"55"},{"size":4854,"mtime":1611333800697,"results":"62","hashOfConfig":"55"},{"size":3394,"mtime":1611333800724,"results":"63","hashOfConfig":"55"},{"size":7217,"mtime":1611582177339,"results":"64","hashOfConfig":"55"},{"size":2764,"mtime":1611333800723,"results":"65","hashOfConfig":"55"},{"size":3233,"mtime":1611423900895,"results":"66","hashOfConfig":"55"},{"size":3020,"mtime":1611348431005,"results":"67","hashOfConfig":"55"},{"size":382,"mtime":1611333800709,"results":"68","hashOfConfig":"55"},{"size":6811,"mtime":1611333800726,"results":"69","hashOfConfig":"55"},{"size":2893,"mtime":1611333800721,"results":"70","hashOfConfig":"55"},{"size":3476,"mtime":1611581038087,"results":"71","hashOfConfig":"55"},{"size":3640,"mtime":1611421849744,"results":"72","hashOfConfig":"55"},{"size":1101,"mtime":1611333800705,"results":"73","hashOfConfig":"55"},{"size":9385,"mtime":1611333800701,"results":"74","hashOfConfig":"55"},{"size":8144,"mtime":1611423842795,"results":"75","hashOfConfig":"55"},{"size":4878,"mtime":1611348068596,"results":"76","hashOfConfig":"55"},{"size":7073,"mtime":1611333800735,"results":"77","hashOfConfig":"55"},{"size":5281,"mtime":1611333800727,"results":"78","hashOfConfig":"55"},{"size":4006,"mtime":1611581110496,"results":"79","hashOfConfig":"55"},{"size":7462,"mtime":1611333800728,"results":"80","hashOfConfig":"55"},{"size":6480,"mtime":1611333800736,"results":"81","hashOfConfig":"55"},{"size":270,"mtime":1611333800739,"results":"82","hashOfConfig":"55"},{"size":264,"mtime":1611333800740,"results":"83","hashOfConfig":"55"},{"size":267,"mtime":1611333800741,"results":"84","hashOfConfig":"55"},{"size":272,"mtime":1611333800738,"results":"85","hashOfConfig":"55"},{"size":300,"mtime":1609682483677,"results":"86","hashOfConfig":"55"},{"size":1476,"mtime":1609682877318,"results":"87","hashOfConfig":"55"},{"size":664,"mtime":1611333800747,"results":"88","hashOfConfig":"55"},{"size":255,"mtime":1611333800744,"results":"89","hashOfConfig":"55"},{"size":349,"mtime":1611333800745,"results":"90","hashOfConfig":"55"},{"size":616,"mtime":1611333800751,"results":"91","hashOfConfig":"55"},{"size":3155,"mtime":1611333800708,"results":"92","hashOfConfig":"55"},{"size":899,"mtime":1611581480181,"results":"93","hashOfConfig":"55"},{"size":2673,"mtime":1611333800760,"results":"94","hashOfConfig":"55"},{"size":520,"mtime":1611333800761,"results":"95","hashOfConfig":"55"},{"size":307,"mtime":1611333800741,"results":"96","hashOfConfig":"55"},{"size":1774,"mtime":1611421717274,"results":"97","hashOfConfig":"55"},{"size":926,"mtime":1611333800754,"results":"98","hashOfConfig":"55"},{"size":4695,"mtime":1611333800759,"results":"99","hashOfConfig":"55"},{"size":1501,"mtime":1611333800753,"results":"100","hashOfConfig":"55"},{"size":1029,"mtime":1611333800756,"results":"101","hashOfConfig":"55"},{"size":811,"mtime":1611333800757,"results":"102","hashOfConfig":"55"},{"size":2750,"mtime":1611333800766,"results":"103","hashOfConfig":"55"},{"size":3151,"mtime":1611333800743,"results":"104","hashOfConfig":"55"},{"size":712,"mtime":1611333810654,"results":"105","hashOfConfig":"55"},{"size":728,"mtime":1611333800767,"results":"106","hashOfConfig":"55"},{"size":1063,"mtime":1611333814747,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"12p1cs1",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"110"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"110"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"110"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},"C:\\MyCode\\client\\src\\index.js",[],["240","241"],"C:\\MyCode\\client\\src\\DataContext.js",[],"C:\\MyCode\\client\\src\\serviceWorker.js",[],"C:\\MyCode\\client\\src\\App.jsx",["242","243"],"//Components\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Step1 from \"./components/Step1\";\nimport Step2 from \"./components/Step2\";\nimport Result from \"./components/Result\";\nimport Signin from \"./components/Signin\";\nimport Logout from \"./components/Logout\";\nimport Footer from \"./components/Footer\";\nimport UserPage from \"./components/UserPage\";\nimport ProductPage from \"./components/ProductPage\";\nimport UploadProduct from \"./components/UploadProduct\";\nimport ProductsLandingPage from \"./components/ProductsLandingPage\";\nimport Cart from \"./components/CartPage\";\nimport HistoryPage from \"./components/HistoryPage\";\nimport SingleUser from \"./components/admin/SingleUser\";\nimport DeletedUserProvider from \"./DeletedUserContext\";\nimport HandleProductsPage from \"./components/admin/HandleProductsPage\";\nimport UpdateProduct from \"./components/admin/UpdateProduct\";\nimport Payments from \"./components/admin/Payments\";\n//Else\nimport { ToastProvider } from \"react-toast-notifications\";\nimport Jordan from \"./components/brands/Jordan\";\nimport Nike from \"./components/brands/Nike\";\nimport Yeezy from \"./components/brands/Yeezy\";\nimport Adidas from \"./components/brands/Adidas\";\nimport Confirmation from \"./components/Confirmation\";\nimport AllUsers from \"./components/admin/AllUsers\";\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { Switch, Route, useParams } from \"react-router-dom\";\nimport { getCurrentUser } from \"./services/userService\";\nimport \"./App.css\";\nimport { userRole } from \"./config.json\";\nconst { ADMIN } = userRole;\n\n// Create new context for user\nexport const UserContext = createContext(null);\n\nfunction App() {\n  const [user, SetUser] = useState({});\n\n  /**\n   * On page load get logged in user information {Object}\n   */\n  useEffect(() => {\n    const user = getCurrentUser();\n    SetUser(user);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <ToastProvider\n        autoDismiss\n        autoDismissTimeout={6000}\n        placement=\"top-center\"\n      >\n        <header>\n          <Navbar user={user} />\n        </header>\n\n        <main className=\"flex-fill\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/step1\" component={Step1} />\n            <Route path=\"/step2\" component={Step2} />\n            <Route path=\"/result\" component={Result} />\n            <Route path=\"/Signin\" component={Signin} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/products\" exact component={ProductsLandingPage} />\n            <Route path=\"/history\" exact component={HistoryPage} />\n            <Route path=\"/brands/jordan\" component={Jordan} />\n            <Route path=\"/brands/nike\" component={Nike} />\n            <Route path=\"/brands/yeezy\" component={Yeezy} />\n            <Route path=\"/brands/adidas\" component={Adidas} />\n            <Route path=\"/confirmation/:token\" component={Confirmation} />\n            <DeletedUserProvider>\n              <UserContext.Provider value={user}>\n                <Route path=\"/products/:productId\" component={ProductPage} />\n                <Route path=\"/admin/payments\" exact component={Payments} />\n                <Route\n                  path=\"/update-product/:productId\"\n                  exact\n                  component={UpdateProduct}\n                />\n                <Route path=\"/admin/all-users\" exact component={AllUsers} />\n                <Route path=\"/admin/all-users/:userId\" component={SingleUser} />\n                <Route path=\"/handle-products\" component={HandleProductsPage} />\n                <Route path=\"/cart\" component={Cart} />\n                <Route path=\"/user-page\" component={UserPage} />\n                <Route path=\"/upload-product\" component={UploadProduct} />\n              </UserContext.Provider>\n            </DeletedUserProvider>\n          </Switch>\n        </main>\n        {window.location.pathname !== \"/cpanel\" && (\n          <footer>\n            <Footer></Footer>\n          </footer>\n        )}\n      </ToastProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","C:\\MyCode\\client\\src\\DeletedUserContext.js",[],"C:\\MyCode\\client\\src\\components\\Confirmation.js",["244","245"],"import { useEffect } from \"react\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { apiUrl } from \"../config.json\";\r\nimport http from \"../services/httpService\";\r\n\r\nfunction Confirmation(props) {\r\n  const history = useHistory();\r\n  const { addToast } = useToasts();\r\n  const params = props.match.params.token;\r\n\r\n  /**\r\n   * On page load move to Sign in page\r\n   */\r\n  useEffect(async () => {\r\n    await http\r\n      .post(`${apiUrl}/users/verify`, { params })\r\n      .then((res) => {\r\n        if (res && res.data) {\r\n          console.log(res.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    addToast(\"User have been confirmed!\", { appearance: \"success\" });\r\n    history.push(\"/signin\");\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n\r\nexport default Confirmation;\r\n","C:\\MyCode\\client\\src\\services\\userService.js",["246"],"import { apiUrl } from \"../config.json\";\r\nimport http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\nconst tokenKey = \"token\";\r\n\r\n/**\r\n * @returns - JWT token that containes user's information from the local storage\r\n */\r\nexport function getJwt() {\r\n  const tokenKey = \"token\";\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\n/**\r\n * Remove user's JWT token from the local storage\r\n */\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\n/**\r\n * @returns {object} - Current logged in user information\r\n */\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Set JWT token with user's info from the server to local storage\r\n * @param {string} email - User's email input value\r\n * @param {string} password - User's password input value\r\n */\r\nexport async function login(email, password) {\r\n  const { data } = await http.post(`${apiUrl}/users/login`, {\r\n    email,\r\n    password,\r\n  });\r\n\r\n  localStorage.setItem(tokenKey, data.token);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  getCurrentUser,\r\n  logout,\r\n  getJwt,\r\n};\r\n","C:\\MyCode\\client\\src\\components\\About.jsx",["247","248"],"import React from \"react\";\r\nimport PageHeader from \"./utils/PageHeader\";\r\nimport \"../css/About.css\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <div className=\"d-sm-block d-md-block d-lg-none\">\r\n        <PageHeader>Who We Are ?</PageHeader>\r\n      </div>\r\n      <div className=\"page-header d-none d-sm-none d-md-none d-lg-block\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6 text-container\">\r\n              <h2 className=\"page-header-title\">\r\n                THE STOCK MARKET FOR SNEACKERS\r\n              </h2>\r\n              <p>\r\n                SneakerHeads is the world’s first stock market for sneakers.\r\n                <br /> Here you can find your favorite sneaker from a wide\r\n                variety of the most wanted brands. Retro Jordans, Nikes, Yeezys\r\n                and more – now 100% authentic guaranteed.\r\n              </p>\r\n            </div>\r\n            <div className=\"col-6 d-flex justify-content-center align-items-center\">\r\n              <div className=\"page-header-image\">\r\n                <img\r\n                  width=\"100%\"\r\n                  src=\"/images/airForce1_white.png\"\r\n                  alt=\"air-force-1 image\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row mt-4\">\r\n          <div className=\"col-12 text-center\">\r\n            <h1 className=\"display-4 pt-4\">We Are SneakerHeads </h1>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p className=\"main-para\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta cum\r\n              odio, a numquam ab officia nesciunt. Eveniet voluptates nulla\r\n              <br />\r\n              accusantium beatae maiores nobis iusto, perspiciatis nemo\r\n              cupiditate, aliquid porro, delectus perferendis corporis unde.\r\n              Ipsum vel, delectus possimus id quas incidunt provident quod\r\n              nostrum ad mollitia earum voluptas perferendis ullam consequatur\r\n              <br />\r\n              <br />\r\n              amet dolore architecto asperiores quo fugit aliquam inventore\r\n              reiciendis dolores! Beatae officia illo consectetur tempore\r\n              voluptatem commodi pariatur fugiat corporis sunt rem quibusdam\r\n              nihil molestiae, repellendus porro impedit exercitationem in\r\n              tempora labore suscipit alias totam dolorum? Itaque quas repellat\r\n              excepturi nam, temporibus iste laudantium harum ipsum assumenda\r\n              vitae labore qui!\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-success mt-4 d-sm-block d-md-block d-lg-none\">\r\n        <div className=\"container\">\r\n          <div className=\"row \">\r\n            <div className=\"col-12 d-flex flex-column justify-content-center align-items-center\">\r\n              <h2 className=\"text-center m-4 visit-us-title\">Come Visit Us</h2>\r\n              <p className=\"text-center visit-us-para\">\r\n                SneakerHeads physical shop is a one of a kind. We got the\r\n                biggest collection, of your favorite brands, in the area and we\r\n                are welcoming you to come and shop with our winning and joyfull\r\n                staff.\r\n                <br />\r\n                <strong>\r\n                  <i>Come and share your love for sneakers!</i>\r\n                </strong>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sec-section mt-4 d-none d-sm-none d-md-none d-lg-block\">\r\n        <div className=\"container\">\r\n          <div className=\"row mt sec-section-row shop-image\">\r\n            <div className=\"col-5 d-flex justify-content-center align-items-center\">\r\n              <div className=\"\">\r\n                <img\r\n                  width=\"100%\"\r\n                  src=\"/images/pexels-rodnae-productions-5698853.jpg\"\r\n                  alt=\"air-force-1 image\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-7 d-flex flex-column justify-content-center align-items-center\">\r\n              <h2 className=\"visit-us-title\">Come Visit Us</h2>\r\n              <p className=\"visit-us-para\">\r\n                SneakerHeads physical shop is a one of a kind. We got the\r\n                biggest collection, of your favorite brands, in the area and we\r\n                are welcoming you to come and shop with our winning and joyfull\r\n                staff.\r\n                <br />\r\n                Come and share your love for sneakers!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","C:\\MyCode\\client\\src\\components\\Step2.jsx",["249"],"import React, { useState } from \"react\";\r\nimport Form from \"../components/forms/Form\";\r\nimport MainContainer from \"../components/forms/MainContainer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Input from \"../components/forms/Input\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { useData } from \"../DataContext\";\r\nimport {} from \"../DataContext\";\r\nimport PrimaryButton from \"./forms/PrimaryButton\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { getCurrentUser } from \"../services/userService\";\r\nimport PageHeader from \"./utils/PageHeader\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email(\"Email should have correct format\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string()\r\n    .min(6, \"Passwrod should be a minimum of 6 charcters long\")\r\n    .required(\"Password is required\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .min(6, \"Passwrod should be a minimum of 6 charcters long\")\r\n    .required(\"Password is required\"),\r\n});\r\n/**\r\n * Component - Step 2 of signup wizard\r\n * @component\r\n */\r\nfunction Step2() {\r\n  const [error, setError] = useState({});\r\n  const { data, setValues } = useData();\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: {\r\n      email: data.email,\r\n      password: data.password,\r\n    },\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(schema),\r\n  });\r\n  /**\r\n   * Adding global values of useData\r\n   * @param {object} data - Values gathered by usForm hook from the inputs\r\n   */\r\n  const onSubmit = (data) => {\r\n    const { password, confirmPassword } = data;\r\n    // If passwords are diffrent from each other send error\r\n    if (password !== confirmPassword) {\r\n      setError({ confirmPassword: \"Passwords most be the same\" });\r\n    } else {\r\n      delete data.confirmPassword;\r\n      //Move to Result page\r\n      history.push(\"/result\");\r\n      setValues(data);\r\n    }\r\n  };\r\n\r\n  // If user is logged in move to Home page\r\n  if (getCurrentUser()) return <Redirect to=\"/\" />;\r\n  return (\r\n    <React.Fragment>\r\n      <PageHeader>\r\n        <div className=\"text-center\">Step 2</div>\r\n      </PageHeader>\r\n\r\n      <MainContainer>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Input\r\n            ref={register}\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            required\r\n            error={!!errors.email}\r\n            helperText={errors?.email?.message}\r\n          />\r\n          <Input\r\n            ref={register}\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            required\r\n            error={!!errors.password}\r\n            helperText={errors?.password?.message}\r\n          />\r\n          <Input\r\n            ref={register}\r\n            type=\"password\"\r\n            label=\"Confirm Password\"\r\n            name=\"confirmPassword\"\r\n            required\r\n            error={!!errors.confirmPassword || !!error.confirmPassword}\r\n            helperText={\r\n              errors?.confirmPassword?.message || error?.confirmPassword\r\n            }\r\n          />\r\n          <PrimaryButton type=\"submit\">Next</PrimaryButton>\r\n        </Form>\r\n      </MainContainer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Step2;\r\n","C:\\MyCode\\client\\src\\components\\Navbar.jsx",["250","251","252","253","254"],"import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport { userRole } from \"../config.json\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport \"../css/PageHeader.css\";\r\nconst { NORMAL, ADMIN } = userRole;\r\n\r\nfunction Navbar({ user }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md navbar-light shadow\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand mb-0 h1\" to=\"/\">\r\n          SneakerHeads\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/products\">\r\n                <strong> Browse</strong>\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/about\">\r\n                <strong> who-we-are </strong>\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <Link\r\n                className=\"nav-link dropdown-toggle\"\r\n                to=\"#\"\r\n                id=\"dropdown04\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <strong> Brands</strong>\r\n              </Link>\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdown04\">\r\n                <Link className=\"dropdown-item\" to=\"/brands/jordan\">\r\n                  <strong className=\"mr-2\">Jordan</strong>\r\n                  <img width=\"30px\" src=\"/images/JumpMan.png\"></img>\r\n                </Link>\r\n                <Link className=\"dropdown-item\" to=\"/brands/nike\">\r\n                  <strong className=\"mr-2\">Nike</strong>\r\n                  <img width=\"40px\" src=\"/images/nikeSwoosh.png\"></img>\r\n                </Link>\r\n                <Link className=\"dropdown-item\" to=\"/brands/yeezy\">\r\n                  <strong className=\"mr-2\">Yeezy</strong>\r\n                  <img width=\"40px\" src=\"/images/yeezyLogo.png\"></img>\r\n                </Link>\r\n                <Link className=\"dropdown-item\" to=\"/brands/adidas\">\r\n                  <strong className=\"mr-2\">Adidas</strong>\r\n                  <img width=\"30px\" src=\"/images/adidasLogo.png\"></img>\r\n                </Link>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n\r\n          <span className=\"example-site\">\r\n            Example Site Products Not For Sale!\r\n          </span>\r\n\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            {!user && (\r\n              <React.Fragment>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/signin\">\r\n                    <strong>Signin</strong>\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/step1\">\r\n                    <strong>Signup</strong>\r\n                  </NavLink>\r\n                </li>\r\n              </React.Fragment>\r\n            )}\r\n\r\n            {user && (\r\n              <React.Fragment>\r\n                {user.role !== NORMAL && (\r\n                  <div>\r\n                    <li className=\"nav-item dropdown\">\r\n                      <Link\r\n                        className=\"nav-link dropdown-toggle\"\r\n                        to=\"#\"\r\n                        id=\"dropdown04\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"false\"\r\n                      >\r\n                        <strong> C-Panel</strong>\r\n                      </Link>\r\n                      <div\r\n                        className=\"dropdown-menu\"\r\n                        aria-labelledby=\"dropdown04\"\r\n                      >\r\n                        <Link className=\"dropdown-item\" to=\"/upload-product\">\r\n                          <i className=\"fas fa-upload\"></i> Upload A Product\r\n                        </Link>\r\n                        <Link className=\"dropdown-item\" to=\"/handle-products\">\r\n                          <i className=\"fas fa-grip-horizontal\"></i> Handle\r\n                          Products\r\n                        </Link>\r\n                        {user.role === ADMIN && (\r\n                          <div>\r\n                            <Link\r\n                              className=\"dropdown-item\"\r\n                              to=\"/admin/all-users\"\r\n                            >\r\n                              <i className=\"far fa-address-book\"></i> All Users\r\n                            </Link>\r\n                            <Link\r\n                              className=\"dropdown-item\"\r\n                              to=\"/admin/payments\"\r\n                            >\r\n                              <i className=\"fas fa-credit-card\"></i> Payments\r\n                            </Link>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </li>\r\n                  </div>\r\n                )}\r\n                <li className=\"nav-item dropdown\">\r\n                  <Link\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    to=\"#\"\r\n                    id=\"dropdown04\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    <strong>{user.firstName + \" \" + user.lastName}</strong>\r\n                  </Link>\r\n                  <div className=\"dropdown-menu\" aria-labelledby=\"dropdown04\">\r\n                    <Link className=\"dropdown-item\" to=\"/history\">\r\n                      <i className=\"fas fa-history\"></i> History\r\n                    </Link>\r\n                    <Link className=\"dropdown-item\" to=\"/user-page\">\r\n                      <i className=\"fas fa-cog\"></i> Settings\r\n                    </Link>\r\n                    <Link className=\"dropdown-item\" to=\"/logout\">\r\n                      <i className=\"fas fa-sign-out-alt\"></i> Logout\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    to=\"#\"\r\n                    onClick={() => (window.location = \"/cart\")}\r\n                  >\r\n                    <Badge\r\n                      badgeContent={user.cart && user.cart.length}\r\n                      color=\"secondary\"\r\n                    >\r\n                      <i className=\"fas fa-shopping-cart fa-2x\"></i>\r\n                    </Badge>\r\n                  </NavLink>\r\n                </li>\r\n              </React.Fragment>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\MyCode\\client\\src\\components\\Step1.jsx",[],"C:\\MyCode\\client\\src\\components\\Home.jsx",["255"],"import React, { useEffect, useState } from \"react\";\r\nimport \"../css/HomePage.css\";\r\nimport http from \"../services/httpService\";\r\nimport { Col, Row, Card } from \"antd\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, makeStyles } from \"@material-ui/core\";\r\nimport ImageSlider from \"./utils/ImageSlider\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport PageHeader from \"./utils/PageHeader\";\r\nimport PopularBrands from \"./HomePageDetail/PopularBrands\";\r\nimport { localUrl, apiUrl } from \"../config.json\";\r\n\r\nconst useStyles = makeStyles((them) => ({\r\n  topImage: {\r\n    backgroundImage: `url(\"${localUrl}/images/homepagestrip.jpg\")`,\r\n  },\r\n}));\r\n/**\r\n * Component - Home page\r\n * @component\r\n */\r\nfunction Home() {\r\n  const styles = useStyles();\r\n  const { addToast } = useToasts();\r\n  const [MostViewedProducts, setMostViewedProducts] = useState([]);\r\n\r\n  /**\r\n   * On page load send request to server to get most viewed products list\r\n   */\r\n  useEffect(() => {\r\n   \r\n    const limit = 8;\r\n    http.post(`${apiUrl}/products/getMostViews`, { limit }).then((response) => {\r\n      if (response.data.success) {\r\n        setMostViewedProducts(response.data.products);\r\n      } else {\r\n        addToast(\"Faild to fetch products\", {\r\n          appearance: \"error\",\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // Render products cards by mapping MostViewedProducts {Array}\r\n  const renderCards = MostViewedProducts.map((prod, index) => {\r\n\r\n    const shortTitle = (str) => {\r\n      if (str.length > 25) {\r\n        return str.substring(0, 25) + \"...\";\r\n      } else {\r\n        return str;\r\n      }\r\n    };\r\n\r\n    const prodTitle = shortTitle(prod.title)\r\n    return (\r\n      <Col key={index} xs={12} md={8} lg={6}>\r\n        <Card\r\n          style={{\r\n            backgroundColor: \"#fafafa\",\r\n            overflow: \"hidden\",\r\n          }}\r\n          bordered={true}\r\n          hoverable={true}\r\n          cover={\r\n            <a href={`/products/${prod._id}`}>\r\n              <ImageSlider images={prod.images} />{\" \"}\r\n            </a>\r\n          }\r\n        >\r\n          <div className=\"card-title\">{prodTitle} </div>\r\n          <Meta description={`$${prod.price}`} />\r\n        </Card>\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-sm-block d-md-none\">\r\n        <PageHeader>Home</PageHeader>\r\n      </div>\r\n\r\n      <div\r\n        className={`home-page-header d-none d-sm-none d-md-block ${styles.topImage}`}\r\n      >\r\n        {/* stripe image */}\r\n      </div>\r\n      <div className=\"container\">\r\n        <PopularBrands />\r\n\r\n        <div className=\"row mt-4\">\r\n          <div className=\"col-8\">\r\n            <h2 className=\"mb-0 row-title\">Most Popular</h2>\r\n          </div>\r\n          <div className=\"col-4 d-flex align-items-end justify-content-end\">\r\n            <Typography component=\"h5\">\r\n              <Link className=\"see-all text-success\" to=\"/products\">\r\n                See All\r\n              </Link>\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-2\">\r\n          <Row gutter={[30, 16]}>{renderCards}</Row>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\MyCode\\client\\src\\components\\Result.jsx",[],"C:\\MyCode\\client\\src\\components\\Logout.jsx",[],"C:\\MyCode\\client\\src\\components\\UserPage.jsx",[],"C:\\MyCode\\client\\src\\components\\Signin.jsx",[],"C:\\MyCode\\client\\src\\components\\Footer.jsx",[],"C:\\MyCode\\client\\src\\components\\ProductPage.jsx",["256","257","258","259","260","261"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport http from \"../services/httpService\";\r\nimport ProductCarousel from \"./productDetails/ProductCarousel\";\r\nimport ProductInfo from \"./productDetails/ProductInfo\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { userRole } from \"../config.json\";\r\nimport swal from \"sweetalert2\";\r\nimport { UserContext } from \"../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { localUrl, apiUrl } from \"../config.json\";\r\nconst { ADMIN, EDITOR, NORMAL } = userRole;\r\n\r\n/**\r\n * Component - Product page, single product\r\n * @component\r\n */\r\nconst ProductPage = (props) => {\r\n  const history = useHistory();\r\n  const user = useContext(UserContext);\r\n  const { addToast } = useToasts();\r\n  const productId = props.match.params.productId;\r\n  const [Product, setProduct] = useState([]);\r\n  /**\r\n   * On page load fetch single product data from DB using _id\r\n   */\r\n  useEffect(() => {\r\n    http\r\n      .get(`${apiUrl}/products/product_by_id?id=${productId}`)\r\n      .then((response) => {\r\n        setProduct(response.data[0]);\r\n      });\r\n  }, []);\r\n  /**\r\n   * Send request to server to add a product to the cart\r\n   * @param {String} productId - product id number\r\n   */\r\n  const addToCartHandler = async (productId, buy = null) => {\r\n    if (!user) {\r\n      return swal\r\n        .fire({\r\n          title: \"Please Login To Add Products\",\r\n          icon: \"info\",\r\n          showDenyButton: true,\r\n          showCancelButton: true,\r\n          confirmButtonText: `Register Here`,\r\n          denyButtonText: `Sign In`,\r\n        })\r\n        .then((result) => {\r\n          if (result.isConfirmed) {\r\n            window.location = \"/step1\";\r\n          } else if (result.isDenied) {\r\n            window.location = \"/signin\";\r\n          }\r\n        });\r\n    }\r\n    await http\r\n      .post(`${apiUrl}/users/addToCart`, { productId })\r\n      .then((response) => {\r\n        // Replace user's JWT token to new one in local storage\r\n        localStorage.setItem(\"token\", response.data.token);\r\n\r\n        if(buy) {\r\n          window.location =\"/cart\"\r\n        }\r\n\r\n        swal\r\n          .fire({\r\n            title: \"Successfully Added To Your Cart\",\r\n            icon: \"success\",\r\n            showDenyButton: true,\r\n            showCloseButton: true,\r\n            confirmButtonText: `Keep Shopping`,\r\n            denyButtonText: `Go To Cart`,\r\n          })\r\n          .then((result) => {\r\n            if (result.isConfirmed) {\r\n              window.location = \"/products\";\r\n            } else if (result.isDenied) {\r\n              window.location = \"/cart\";\r\n            }\r\n          });\r\n      })\r\n      .catch((err) =>\r\n        addToast(\r\n          \"Error: Unexpcted problem. Coludn't add this products to your cart\",\r\n          { appearance: \"error\" }\r\n        )\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        {Product.tags && (\r\n          <div className=\"mt-4 col-10\">{Product.tags.join(\" / \")}</div>\r\n        )}\r\n        <div className=\"col-12 text-center\">\r\n          <Typography className=\"mt-4\" component=\"h1\" variant=\"h3\">\r\n            {Product.title}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-lg-12\">\r\n          <ProductCarousel product={Product} />\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: \"50px\" }}>\r\n        <ProductInfo addToCart={addToCartHandler} product={Product} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","C:\\MyCode\\client\\src\\components\\HistoryPage.jsx",["262"],"import React, { useEffect, useState } from \"react\";\r\nimport http from \"../services/httpService\";\r\nimport HistoryTable from \"./utils/HistoryTable\";\r\nimport PageHeader from \"./utils/PageHeader\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\n/**\r\n * Component - History page, purchases information\r\n * @component\r\n */\r\nfunction HistoryPage() {\r\n  const { addToast } = useToasts();\r\n  const [History, setHistory] = useState([]);\r\n\r\n  /**\r\n   * On page load send request to server to get purchases history\r\n   */\r\n  useEffect(() => {\r\n    http.get(`${apiUrl}/users/getHistory`).then((response) => {\r\n      if (response.data.success) {\r\n        setHistory(response.data.history);\r\n      } else {\r\n        addToast(\"Failed to get History\", { appearance: \"error\" });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PageHeader>Purchase History</PageHeader>\r\n      <div className=\"container-lg container-md\">\r\n        <HistoryTable history={History} />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default HistoryPage;\r\n","C:\\MyCode\\client\\src\\components\\CartPage.jsx",["263","264","265"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../App\";\r\nimport http from \"../services/httpService\";\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  CardContent,\r\n  Card,\r\n  CardActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Empty } from \"antd\";\r\nimport CartTable from \"./cartDetail/CartTable\";\r\nimport Paypal from \"./utils/Paypal\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport PageHeader from \"./utils/PageHeader\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getCurrentUser } from \"../services/userService\";\r\nimport swal from \"sweetalert2\";\r\nimport Confetii from \"react-confetti\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\n// Items CSS styles\r\nconst useStyles = makeStyles((them) => ({\r\n  card: {\r\n    alignSelf: \"start\",\r\n    marginTop: them.spacing(2),\r\n    background: \"linear-gradient(#e5e5e5, #f5f5f5, #f5f5f5, #f5f5f5)\",\r\n  },\r\n  link: {\r\n    fontSize: \"3em\",\r\n  },\r\n}));\r\n\r\n/**\r\n * Component - Cart page\r\n * @component\r\n */\r\nfunction CartPage() {\r\n  const history = useHistory();\r\n  const { addToast } = useToasts();\r\n  const styles = useStyles();\r\n  const user = useContext(UserContext);\r\n  const { cart } = user;\r\n  const [ProductsInfo, setProductsInfo] = useState([]);\r\n  const [TotalPrice, setTotalPrice] = useState(0);\r\n  const [Quantity, setQuantity] = useState(0);\r\n  const [Success, setSuccess] = useState(false);\r\n\r\n  /**\r\n   * const {user} - logged user\r\n   * cont {cart} - user's cart details\r\n   * On page load send request to server to get user's cart details\r\n   */\r\n  useEffect(() => {\r\n    let cartItemsIds = [];\r\n\r\n    if (user && cart) {\r\n      // If there's items in cart push the items ids {Sting} to cartItemsIds\r\n      if (cart && cart.length > 0) {\r\n        cart.forEach((item) => {\r\n          cartItemsIds.push(item._id);\r\n        });\r\n        http\r\n          .get(\r\n            `${apiUrl}/products/products_by_id?id=${cartItemsIds}&type=array`\r\n          )\r\n          .then((response) => {\r\n            // Create Array of items quntity numbers\r\n            let arr = cart.map((item) => {\r\n              return item.quantity;\r\n            });\r\n            // Calculate the sum of the cart items quantity\r\n            let reducedNum = arr.reduce((a, b) => a + b, 0);\r\n            setQuantity(reducedNum);\r\n\r\n            cart.forEach((cartItem) => {\r\n              response.data.forEach((product, index) => {\r\n                // If products ids from server and cart equal\r\n                // Set quantity of server response product to cart item quantity\r\n                if (cartItem._id === product._id) {\r\n                  response.data[index].quantity = cartItem.quantity;\r\n                }\r\n              });\r\n            });\r\n            setProductsInfo(response.data);\r\n          });\r\n      }\r\n    }\r\n  }, [cart]);\r\n\r\n  /**\r\n   * Run totalSum if productInfo changes\r\n   * @see totalSum\r\n   */\r\n  useEffect(() => {\r\n    if (ProductsInfo.length > 0) {\r\n      totalSum(ProductsInfo);\r\n    }\r\n  }, [ProductsInfo]);\r\n\r\n  /**\r\n   * Set the total sum of cart items price to TotalPrice state\r\n   * @param {Array.<Object>} productsInfo\r\n   */\r\n  const totalSum = (productsInfo) => {\r\n    let total = 0;\r\n    productsInfo.map((item) => {\r\n      total += parseInt(item.price, 10) * item.quantity;\r\n    });\r\n\r\n    setTotalPrice(total);\r\n  };\r\n\r\n  /**\r\n   * <pre>\r\n   * const {cart} - user's cart details Object\r\n   * const {products} - cart products details Object\r\n   * Send request to server to remove item from the cart\r\n   * @param {String} productId\r\n   * </pre>\r\n   */\r\n  const removeFromCart = (productId) => {\r\n    http\r\n      .get(`${apiUrl}/users/removeFromCart?_id=${productId}`)\r\n      .then((response) => {\r\n        const { cart, products } = response.data;\r\n        cart.forEach((cartItem) => {\r\n          products.forEach((prod, i) => {\r\n            // If ids of cartItem and product equal\r\n            // Set product quantity to cartItem quantity\r\n            if (cartItem._id === prod._id) {\r\n              products[i].quantity = cartItem.quantity;\r\n            }\r\n          });\r\n        });\r\n        setProductsInfo(products);\r\n\r\n        // Get the index of the prodcut to remove\r\n        let indexId = ProductsInfo.map((item) => {\r\n          return item._id;\r\n        }).indexOf(productId);\r\n        // Remove wanted product from the products array\r\n        ProductsInfo.splice(indexId, 1);\r\n        // If no products in cart refresh Cart page\r\n        if (ProductsInfo.length === 0) {\r\n          window.location = \"/cart\";\r\n        }\r\n        // Replace user's JWT token to updated token\r\n        localStorage.setItem(\"token\", response.data.token);\r\n      })\r\n      .catch((err) => console.log(\"err : \", err));\r\n  };\r\n\r\n  /**\r\n   * <pre>\r\n   * Send request to server to update user purchases history\r\n   * and payment information\r\n   * @param {Object} data - payment information gatherd from paypal component\r\n   * </pre>\r\n   */\r\n  const transactionSuccess = (data) => {\r\n    const variables = {\r\n      cartDetail: ProductsInfo,\r\n      paymentData: data,\r\n    };\r\n\r\n    http.post(`${apiUrl}/users/successBuy`, variables).then((response) => {\r\n      if (response.data.success) {\r\n        // Replace user's JWT token to updated token\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        // Fire success popup\r\n        setSuccess(true);\r\n        swal\r\n          .fire(\r\n            \"Transaction Successfull!\",\r\n            \"Your item will be sent as soon as possible\",\r\n            \"success\"\r\n          )\r\n          .then((data) => {\r\n            if (data && data.isConfirmed) {\r\n              // Move to Home page\r\n              window.location = \"/\";\r\n            }\r\n          });\r\n      } else {\r\n        addToast(\"Failed to purchase item/s\", { appearance: \"error\" });\r\n      }\r\n    });\r\n  };\r\n  if (Success) {\r\n    return <Confetii />;\r\n  }\r\n\r\n  /**\r\n   * Pop an error\r\n   */\r\n  const transactionError = () => {\r\n    addToast(\"Error: Paypal server problem\", { appearance: \"error\" });\r\n  };\r\n\r\n  /**\r\n   * Pop an error\r\n   */\r\n  const transactionCanceled = () => {\r\n    addToast(\"Transaction canceled\", { appearance: \"error\" });\r\n  };\r\n\r\n  // If user not logged in move to Home page\r\n  if (!getCurrentUser()) return <Redirect to=\"/\" />;\r\n  return (\r\n    <React.Fragment>\r\n      <PageHeader>Shopping Cart</PageHeader>\r\n      <div className=\"container-lg container-md\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <CartTable\r\n              ProductsInfo={ProductsInfo}\r\n              removeFromCart={removeFromCart}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            {TotalPrice > 0 ? (\r\n              <Card style={{ display: \"inline-block\" }} className={styles.card}>\r\n                <CardContent>\r\n                  <Typography\r\n                    className=\"d-flex justify-content-between\"\r\n                    variant=\"body1\"\r\n                    component=\"p\"\r\n                  >\r\n                    <span>\r\n                      Subtotal (\r\n                      {Quantity > 1 ? (\r\n                        <span>{Quantity} items</span>\r\n                      ) : (\r\n                        <span>{Quantity} item</span>\r\n                      )}\r\n                      )\r\n                    </span>{\" \"}\r\n                    <span>US ${TotalPrice}</span>\r\n                  </Typography>\r\n                  <Typography\r\n                    className=\"d-flex justify-content-between\"\r\n                    variant=\"body1\"\r\n                    component=\"p\"\r\n                  >\r\n                    Shipping <span>Free</span>\r\n                  </Typography>\r\n                  <hr />\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                      Order total\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" component=\"h2\">\r\n                      US ${TotalPrice}\r\n                    </Typography>\r\n                  </div>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Paypal\r\n                    totalPrice={TotalPrice}\r\n                    onSuccess={transactionSuccess}\r\n                    transactionError={transactionError}\r\n                    transactionCanceled={transactionCanceled}\r\n                  />\r\n                </CardActions>\r\n              </Card>\r\n            ) : (\r\n              <React.Fragment>\r\n                <Empty className=\"mt-4\" description=\"No Items In Cart\"></Empty>\r\n                <div className=\"row justify-content-center\">\r\n                  <div className=\"mt-4 justify-content-center col-6\">\r\n                    <Link to=\"/products\">\r\n                      <Button\r\n                        fullWidth\r\n                        size=\"large\"\r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                      >\r\n                        {\" \"}\r\n                        Shop Now{\" \"}\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CartPage;\r\n","C:\\MyCode\\client\\src\\components\\ProductsLandingPage.jsx",["266","267","268","269"],"import React, { useState, useEffect } from \"react\";\r\nimport http from \"../services/httpService\";\r\nimport PrimaryButton from \"./forms/PrimaryButton\";\r\nimport ImageSlider from \"../components/utils/ImageSlider\";\r\nimport { Col, Row, Card } from \"antd\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport CheckBox from \"./productDetails/CheckBox\";\r\nimport RadioBox from \"./productDetails/RadioBox\";\r\nimport { brands, price } from \"../datas\";\r\nimport SearchFeature from \"./productDetails/SearchFeature\";\r\nimport \"../css/ProductLandingPage.css\";\r\nimport { CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport PageHeader from \"./utils/PageHeader\";\r\nimport { localUrl, apiUrl } from \"../config.json\";\r\n\r\nconst useStyles = makeStyles((them) => ({\r\n  topImage: {\r\n    backgroundImage: `url('/images/landingPageTopImage.jpg');`,\r\n  },\r\n}));\r\n\r\n/**\r\n * Component - ProductLandingPage, Browse Page\r\n * @component\r\n */\r\nfunction ProductsLandingPage() {\r\n  const styles = useStyles();\r\n  const { addToast } = useToasts();\r\n  const [SearchValue, setSearchValue] = useState(\"\");\r\n  const [Products, setProducts] = useState([]);\r\n  const [Limit, setLimit] = useState(12);\r\n  const [PostSize, setPostSize] = useState(0);\r\n  const [Filters, setFilter] = useState({\r\n    brand: [],\r\n    price: [],\r\n  });\r\n  const [LastId, setLastId] = useState(\"\");\r\n\r\n  /**\r\n   * On page load run getProducts with Limit {Number}\r\n   * @see getProducts\r\n   */\r\n  useEffect(() => {\r\n    const variables = {\r\n      limit: Limit,\r\n    };\r\n\r\n    getProducts(variables);\r\n  }, []);\r\n\r\n  /**\r\n   * <pre>\r\n   * Render products from DB\r\n   * const productsList {Array} - Array of product objects\r\n   * const postSize {Number} - Amount of products returned\r\n   * @param {Obejct} variables - Info passed to server\r\n   * </pre>\r\n   */\r\n  const getProducts = (variables) => {\r\n    // Send request to server\r\n    http.post(`${apiUrl}/products/getProducts`, variables).then((response) => {\r\n      if (response.data.success) {\r\n        const { productsList, postSize } = response.data;\r\n        // If there's no items in the array set PostSize to 0\r\n        if (!productsList.length) {\r\n          setPostSize(0);\r\n        }\r\n        // If loadMore exists add productsList items to the existing Products array\r\n        // Else set Products array to productsList\r\n        if (variables.loadMore) {\r\n          setProducts([...Products, ...productsList]);\r\n        } else {\r\n          setProducts(productsList);\r\n        }\r\n        setPostSize(postSize);\r\n\r\n        let lastIndex = productsList.length - 1;\r\n        let lastProduct = productsList[lastIndex];\r\n        // If there's a last item set LastId state to the id {string} of\r\n        // the last object in the array\r\n        if (lastProduct && lastProduct._id) {\r\n          setLastId(lastProduct._id);\r\n        }\r\n      } else {\r\n        addToast(\"Faild to fetch products data\", {\r\n          appearance: \"error\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Call getProducts with new variables\r\n   * @see getProducts\r\n   */\r\n  const onLoadMore = () => {\r\n    const variables = {\r\n      lastId: LastId,\r\n      limit: Limit,\r\n      loadMore: true,\r\n    };\r\n\r\n    getProducts(variables);\r\n  };\r\n\r\n  /**\r\n   * Call getProducts with new variables\r\n   * @see getProducts\r\n   */\r\n  const filteredResults = (filters) => {\r\n    const variables = {\r\n      limit: Limit,\r\n      filters: filters,\r\n    };\r\n    getProducts(variables);\r\n  };\r\n\r\n  /**\r\n   * const price {array} - Array of objects containes id and array\r\n   * @param {Number} value - Int\r\n   * @returns {Array.<String>} - Array of 2 strings\r\n   */\r\n  const handlePrice = (value) => {\r\n    let array = [];\r\n\r\n    for (let key in price) {\r\n      //When id equals to value param set array to the object[array]\r\n      if (price[key]._id === parseInt(value, 10)) {\r\n        array = price[key].array;\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  /**\r\n   * Set the filters of http request to render specific products\r\n   * @param {Array.<Number> | Number} filters - Array of numbers || Single number\r\n   * @param {String} category - category name\r\n   * @see filteredResults\r\n   */\r\n  const handleFilters = (filters, category) => {\r\n    const newFilter = { ...Filters };\r\n    // If the category is \"price\" set the newFilters.price handlePrice result\r\n    // Else set any category to filters value\r\n    if (category === \"price\") {\r\n      let priceValue = handlePrice(filters);\r\n      newFilter[category] = priceValue;\r\n    } else {\r\n      newFilter[category] = filters;\r\n    }\r\n\r\n    filteredResults(newFilter);\r\n    setFilter(newFilter);\r\n  };\r\n\r\n  /**\r\n   * Filter http request result by text\r\n   * @param {String} newSearchTerm\r\n   * @see getProducts\r\n   */\r\n  const updateSearchValues = (newSearchTerm) => {\r\n    const variables = {\r\n      limit: Limit,\r\n      filters: Filters,\r\n      searchTerm: newSearchTerm,\r\n    };\r\n\r\n    setSearchValue(newSearchTerm);\r\n    getProducts(variables);\r\n  };\r\n\r\n  // Render products cards by mapping Products {Array}\r\n  const renderCards = Products.map((prod, index) => {\r\n    const shortTitle = (str) => {\r\n      if (str.length > 25) {\r\n        return str.substring(0, 25) + \"...\";\r\n      } else {\r\n        return str;\r\n      }\r\n    };\r\n\r\n    const prodTitle = shortTitle(prod.title)\r\n   \r\n    return (\r\n      <Col lg={6} md={8} xs={12} key={index}>\r\n        <Card\r\n          style={{ backgroundColor: \"#fafafa\", overflow: \"hidden\" }}\r\n          bordered={true}\r\n          hoverable={true}\r\n          cover={\r\n            <a href={`/products/${prod._id}`}>\r\n              <ImageSlider images={prod.images} />{\" \"}\r\n            </a>\r\n          }\r\n        >\r\n          <div className=\"card-title\">{prodTitle} </div>\r\n          <Meta description={`$${prod.price}`} />\r\n        </Card>\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"d-sm-block d-md-none\">\r\n        <PageHeader>Browse</PageHeader>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"d-none d-sm-none d-md-block\">\r\n          <div\r\n            className={`col-12 d-flex flex-column align-items-end product-landingpage-header-container ${styles.topImage} `}\r\n          >\r\n            <div className=\"d-flex mt-2 flex-column text-box\">\r\n              <h1>Sneakers</h1>\r\n              <p>\r\n                Air Jordan, adidas, Nike, Yeezy and more! Buy all the latest\r\n                sneakers & shoes right here on SneakerHeads.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row mb-2 mt-4\">\r\n          <div className=\"col-lg-6 col-md-6\">\r\n            <CheckBox\r\n              brands={brands}\r\n              handleFilters={(filters) => handleFilters(filters, \"brand\")}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-6 col-md-6\">\r\n            <RadioBox\r\n              price={price}\r\n              handleFilters={(filters) => handleFilters(filters, \"price\")}\r\n            />\r\n          </div>\r\n          <div className=\"mt-lg-2 d-flex justify-content-end col-lg-4 col-md-12\">\r\n            <SearchFeature updateSearchValues={updateSearchValues} />\r\n          </div>\r\n        </div>\r\n        {Products.length === 0 ? (\r\n          <div className=\"row justify-content-center\">\r\n            <div\r\n              style={{ height: \"300px\" }}\r\n              className=\"d-flex justify-content-center align-items-center\"\r\n            >\r\n              <CircularProgress />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"mt-2\">\r\n            <Row gutter={[30, 16]}>{renderCards}</Row>\r\n          </div>\r\n        )}\r\n\r\n        {PostSize >= Limit && (\r\n          <div className=\"row justify-content-center\">\r\n            <div>\r\n              <PrimaryButton\r\n                variant=\"outlined\"\r\n                onClick={onLoadMore}\r\n                fullWidth={false}\r\n              >\r\n                Load More\r\n              </PrimaryButton>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ProductsLandingPage;\r\n","C:\\MyCode\\client\\src\\components\\UploadProduct.jsx",[],"C:\\MyCode\\client\\src\\components\\admin\\SingleUser.jsx",["270","271"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport http from \"../../services/httpService\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport PageHeader from \"../utils/PageHeader\";\r\nimport MainContainer from \"../forms/MainContainer\";\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Button,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\nimport { userRole } from \"../../config.json\";\r\nimport { useDeletedUser } from \"../../DeletedUserContext\";\r\nimport { UserContext } from \"../../App\";\r\nimport { apiUrl } from \"../../config.json\";\r\n\r\nconst { ADMIN, EDITOR, NORMAL } = userRole;\r\n\r\n// Table Cell CSS styles\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#e0e0e0\",\r\n  },\r\n}))(TableCell);\r\n\r\n/**\r\n * Component - SingleUser\r\n * @componet\r\n * @param {Object} props - Containes user _id in params\r\n */\r\nfunction SingleUser(props) {\r\n  const user = useContext(UserContext);\r\n  const { DeletedUser, setDeletedUser } = useDeletedUser();\r\n  const history = useHistory();\r\n  const url = `${apiUrl}/admin/all-users`;\r\n  const userId = props.match.params.userId;\r\n  const [User, setUser] = useState({});\r\n  const { addToast } = useToasts();\r\n  let entries = Object.entries(User);\r\n\r\n  /**\r\n   * <pre>\r\n   * On page load send request to server to get user inforamtion Object\r\n   * Watch for User changes\r\n   * </pre>\r\n   */\r\n  useEffect(() => {\r\n    http\r\n      .get(`${url}/user_by_id?id=${userId}`)\r\n      .then((response) => setUser(response.data))\r\n      .catch((error) => {\r\n        if (error) {\r\n          addToast(\"Error: Could't fetch user data from the server\", {\r\n            appearance: \"error\",\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n  useEffect(() => {}, [User]);\r\n\r\n  /**\r\n   * Send request to server to promote NORMAL user to EDITOR user\r\n   * @param {String} userId - User _id\r\n   */\r\n  const makeEditor = (userId) => {\r\n    // If user is already EDITOR, bail\r\n    if (User.role === EDITOR) {\r\n      return addToast(\"This user is already an EDITOR\", { appearance: \"info\" });\r\n    }\r\n    // Alert ask message\r\n    const confirmed = window.confirm(\r\n      \"Are you sure you want to make this user an Editor?\\nDoing so will allow this user to make changes throughout your application!\"\r\n    );\r\n    // If \"OK\" pressed get in\r\n    if (confirmed) {\r\n      http\r\n        .post(`${url}/makeEditor?id=${userId}`)\r\n        .then((response) => {\r\n          // Move to AllUsers page\r\n          history.push(\"/admin/all-users\");\r\n          addToast(\"User have been promoted to EDITOR\", {\r\n            appearance: \"success\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          addToast(\"Error: Could't update user\", { appearance: \"error\" });\r\n        });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Send request to server to demote EDITOR user to NORMAL user\r\n   * @param {String} userId - User _id\r\n   */\r\n  const makeNormal = (userId) => {\r\n    // If user already NORMAL, bail\r\n    if (User.role === NORMAL) {\r\n      return addToast(\"This user is already a NORMAL user\", {\r\n        appearance: \"info\",\r\n      });\r\n    }\r\n    // Alert ask message\r\n    const confirmed = window.confirm(\r\n      \"Are you sure you want to make this user a NORMAL user?\\nDoing so will take away all of this user authorities!\"\r\n    );\r\n    // If \"OK\" pressed get in\r\n    if (confirmed) {\r\n      http\r\n        .post(`${url}/makeNormal?id=${userId}`)\r\n        .then((response) => {\r\n          // Move to AllUsers page\r\n          history.push(\"/admin/all-users\");\r\n          addToast(\"User have been demoted to NORMAL\", {\r\n            appearance: \"success\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          addToast(\"Error: Could't update user\", { appearance: \"error\" });\r\n        });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Send request to server to delete a user\r\n   */\r\n  const handleDelete = () => {\r\n    // Alert ask message\r\n    const confirmed = window.confirm(\r\n      \"Are you sure you want to delete this user?\\nDoing so will permanently delete this user from the database\"\r\n    );\r\n    // If \"OK\" pressed get in\r\n    if (confirmed) {\r\n      http\r\n        .delete(`${url}/deleteUser?id=${userId}`)\r\n        .then((response) => {\r\n          setDeletedUser(response.data);\r\n          // Move to AllUsers page\r\n          history.push(\"/admin/all-users\");\r\n          addToast(\"User have beem deleted successfully\", {\r\n            appearance: \"success\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          addToast(\"Error: Could't delete user\", { appearance: \"error\" });\r\n        });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Move to AllUsers page\r\n   */\r\n  const handleGoBack = () => {\r\n    history.push(\"/admin/all-users\");\r\n  };\r\n\r\n  /**\r\n   * Change user role num to string and render\r\n   * @returns - Table row with 2 table cells\r\n   */\r\n  const view = entries.map((entry) => {\r\n    if (entry[1] === 1) {\r\n      entry[1] = \"Editor\";\r\n    } else if (entry[1] === 0) {\r\n      entry[1] = \"Normal\";\r\n    }\r\n\r\n    return (\r\n      <TableRow key={entry[0]}>\r\n        <TableCell>{entry[0]}</TableCell>\r\n        <TableCell>{entry[1]}</TableCell>\r\n      </TableRow>\r\n    );\r\n  });\r\n\r\n  // If user in not ADMIN move to Home page\r\n  setTimeout(() => {\r\n    if (user && user.role !== ADMIN) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }, 100);\r\n  return (\r\n    <div>\r\n      <PageHeader>Handle User</PageHeader>\r\n\r\n      <div className=\"container\">\r\n        <MainContainer>\r\n          <Button\r\n            onClick={handleGoBack}\r\n            className=\"mb-2 mr-auto\"\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n          >\r\n            <i className=\"fas fa-long-arrow-alt-left\"></i>&nbsp; Go Back\r\n          </Button>\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>Field</StyledTableCell>\r\n                  <StyledTableCell>Value</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{view}</TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <div\r\n            style={{ width: \"100%\" }}\r\n            className=\"mt-4 d-flex justify-content-between\"\r\n          >\r\n            <Button\r\n              onClick={() => makeEditor(userId)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              Make Editor\r\n            </Button>\r\n            <Button\r\n              onClick={() => makeNormal(userId)}\r\n              color=\"default\"\r\n              variant=\"contained\"\r\n            >\r\n              Make Normal\r\n            </Button>\r\n          </div>\r\n          <Button\r\n            onClick={() => handleDelete(userId)}\r\n            style={{ marginTop: \"50px\" }}\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            Delete User\r\n          </Button>\r\n        </MainContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleUser;\r\n","C:\\MyCode\\client\\src\\components\\admin\\AllUsers.jsx",["272","273"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport http from \"../../services/httpService\";\r\nimport { apiUrl, userRole } from \"../../config.json\";\r\nimport PageHeader from \"../utils/PageHeader\";\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  makeStyles,\r\n  withStyles,\r\n  Button,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDeletedUser } from \"../../DeletedUserContext\";\r\nconst { ADMIN } = userRole;\r\n\r\n// Table Cell CSS styles\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    color: theme.palette.common.white,\r\n  },\r\n}))(TableCell);\r\n\r\n/**\r\n * Component - AllUsers\r\n * @component\r\n */\r\nfunction AllUsers() {\r\n  const { DeletedUser, setDeletedUser } = useDeletedUser();\r\n  const { addToast } = useToasts();\r\n  const user = useContext(UserContext);\r\n  const [Users, setUsers] = useState([]);\r\n  const history = useHistory();\r\n\r\n  /**\r\n   * On page load get all users\r\n   */\r\n  useEffect(() => {\r\n    // send request to server\r\n    http\r\n      .get(`${apiUrl}/admin/getAllUsers`)\r\n      .then((response) => {\r\n        if (response && response.data.success) {\r\n          setUsers(response.data.users);\r\n        } else {\r\n          addToast(\"Could not fetch users from database\", {\r\n            appearance: \"error\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        addToast(\"There was a problem with the server\", {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  /**\r\n   * Move to single user handling page\r\n   * @param {String} userId - User _id\r\n   */\r\n  const handleClick = (userId) => {\r\n    history.push(`/admin/all-users/${userId}`);\r\n  };\r\n\r\n  /**\r\n   * Restore last deleted user\r\n   * @param {Object} DeletedUser - Last deleted user information\r\n   */\r\n  const undoDelete = (DeletedUser) => {\r\n    // Send request to server\r\n    http\r\n      .post(`${apiUrl}/admin/all-users/undoDelete`, DeletedUser)\r\n      .then((response) => {\r\n        // Set user to the response data Object\r\n        let user = response.data;\r\n        addToast(\"User restored successfully\", {\r\n          appearance: \"success\",\r\n        });\r\n        // Move to restored single user page\r\n        history.push(`/admin/all-users/${user._id}`);\r\n        setDeletedUser(false);\r\n      })\r\n      .catch((error) => {\r\n        addToast(\"Error: Could't restore user\", { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  // If user in not ADMIN move to Home page\r\n  setTimeout(() => {\r\n    if (user && user.role !== ADMIN) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }, 100);\r\n  return (\r\n    <div>\r\n      <PageHeader>All Users</PageHeader>\r\n      <div className=\"container-fluid\">\r\n        {DeletedUser && DeletedUser._id && (\r\n          <Link onClick={() => undoDelete(DeletedUser)}>\r\n            <i className=\"fas fa-exclamation-circle\"></i>Undo Delete\r\n          </Link>\r\n        )}\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow className=\"bg-info\">\r\n                <StyledTableCell align=\"left\">User Role</StyledTableCell>\r\n                <StyledTableCell align=\"left\">User Name</StyledTableCell>\r\n                <StyledTableCell align=\"left\">ID</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Email</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Confirmed?</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Handle User</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {Users.map((item, index) => (\r\n                <TableRow\r\n                  key={index}\r\n                  className={index % 2 ? \"bg-light\" : \"bg-white\"}\r\n                >\r\n                  <TableCell align=\"left\">\r\n                    {item.role === 1 ? (\r\n                      <span className=\"text-success\">EDITOR</span>\r\n                    ) : (\r\n                      <span>Normal</span>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {item.firstName + \" \" + item.lastName}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{item._id}</TableCell>\r\n                  <TableCell align=\"left\">{item.email}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {item.confirmed ? (\r\n                      <i className=\"fas fa-check\"></i>\r\n                    ) : (\r\n                      <i className=\"fas fa-times\"></i>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => handleClick(item._id)}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllUsers;\r\n","C:\\MyCode\\client\\src\\components\\admin\\Payments.jsx",["274"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport http from \"../../services/httpService\";\r\nimport { apiUrl, userRole } from \"../../config.json\";\r\nimport { UserContext } from \"../../App\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport PageHeader from \"../utils/PageHeader\";\r\nimport {\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  withStyles,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { getDate } from \"../../datas\";\r\nconst { ADMIN } = userRole;\r\n\r\n// Table Cell CSS styles\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#e0e0e0\",\r\n  },\r\n}))(TableCell);\r\n\r\n/**\r\n * Component - Payments page\r\n * @component\r\n */\r\nfunction Payments() {\r\n  const user = useContext(UserContext);\r\n  const [Payments, setPayments] = useState([]);\r\n  const { addToast } = useToasts();\r\n  /**\r\n   * On page load get all payments {Array.<Object>}\r\n   */\r\n  useEffect(() => {\r\n    // Send request to server\r\n    http\r\n      .get(`${apiUrl}/admin/payments`)\r\n      .then((response) => {\r\n        setPayments(response.data);\r\n      })\r\n      .catch((error) => {\r\n        addToast(\"Error: Couldn't get Payments from the server\", {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  /**\r\n   * @returns - Table row with cells\r\n   */\r\n  const view = Payments.map((item, index) => {\r\n    let user = item.user[0];\r\n    let paymentData = item.paymentData[0];\r\n    let products = item.product;\r\n    // Make array of products prices\r\n    let arr = products.map((item) => {\r\n      return item.price;\r\n    });\r\n    // Get total sum of all products prices\r\n    let reducedNum = arr.reduce((a, b) => a + b, 0);\r\n\r\n    return (\r\n      <TableRow key={index} className={index % 2 ? \"bg-light\" : \"bg-white\"}>\r\n        <TableCell>\r\n          Name: {user.firstName + \" \" + user.lastName}\r\n          <br />\r\n          Email: {user.email}\r\n          <br />\r\n          ID: {user._id}\r\n        </TableCell>\r\n        <TableCell>\r\n          Credit Name: {paymentData.address.recipient_name}\r\n          <br />\r\n          Country: {paymentData.address.country_code}\r\n          <br />\r\n          Postal code: {paymentData.address.postal_code}\r\n          <br />\r\n          {paymentData.paid && \"PAID\"}\r\n          {paymentData.cancelled && \"CANCELLED\"}\r\n        </TableCell>\r\n        <TableCell>\r\n          {products.map((item, index) => {\r\n            return (\r\n              <div key={index} className=\"card p-2 m-1 bg-info text-white\">\r\n                Name: {item.name}\r\n                <br />\r\n                Price: {item.price}\r\n                <br />\r\n                Quantity: {item.quantity}\r\n                <br />\r\n                ID: {item._id}\r\n              </div>\r\n            );\r\n          })}\r\n        </TableCell>\r\n        <TableCell>\r\n          Date of purchase:\r\n          <br />\r\n          {getDate(products[0].dateOfPurchase)}\r\n          <br />\r\n          Total pay: ${reducedNum}\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  });\r\n\r\n  // If user in not ADMIN move to Home page\r\n  setTimeout(() => {\r\n    if (user && user.role !== ADMIN) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }, 100);\r\n  return (\r\n    <div>\r\n      <PageHeader>User's Payments</PageHeader>\r\n\r\n      <div className=\"container\">\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell>User Information</StyledTableCell>\r\n                <StyledTableCell>Payment Details</StyledTableCell>\r\n                <StyledTableCell align=\"center\">\r\n                  Products Details\r\n                </StyledTableCell>\r\n                <StyledTableCell>Date And Total</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{view}</TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payments;\r\n","C:\\MyCode\\client\\src\\components\\admin\\HandleProductsPage.jsx",["275","276","277"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport http from \"../../services/httpService\";\r\nimport { apiUrl, userRole } from \"../../config.json\";\r\nimport { UserContext } from \"../../App\";\r\nimport { Redirect, Link, useHistory } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport PageHeader from \"../utils/PageHeader\";\r\nimport { brands } from \"../../datas\";\r\nimport {\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  withStyles,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  makeStyles,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { localUrl } from \"../../config.json\";\r\nconst { NORMAL } = userRole;\r\n\r\n// Table Cell CSS styles\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#e0e0e0\",\r\n  },\r\n}))(TableCell);\r\n\r\n// Items CSS styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  productImage: {\r\n    width: \"100px\",\r\n  },\r\n  numbers: {\r\n    fontSize: \"1.1em\",\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\n/**\r\n * Component - HandleProductsPage\r\n * @component\r\n */\r\nfunction HandleProductsPage() {\r\n  const history = useHistory();\r\n  const styles = useStyles();\r\n  const user = useContext(UserContext);\r\n  const [Products, setProducts] = useState([]);\r\n  // const [DeletedProduct, setDeletedProduct] = useState({});\r\n  const { addToast } = useToasts();\r\n\r\n  /**\r\n   * On page load get all products {Array.<Object>}\r\n   */\r\n  useEffect(() => {\r\n    // Send request to server\r\n    http\r\n      .get(`${apiUrl}/admin/handle-products/getAllProducts`)\r\n      .then((response) => {\r\n        setProducts(response.data);\r\n      })\r\n      .catch((error) => {\r\n        addToast(\"Error: Couldn't fetch products from the server\", {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n  }, []);\r\n  useEffect(() => {}, [Products]);\r\n\r\n  /**\r\n   * Get first Image of the Array\r\n   * @param {Array.<String>} images - Array of image paths\r\n   * @returns - Image path\r\n   */\r\n  const renderProductImage = (images) => {\r\n    // If 1 or more items get in\r\n    if (images.length > 0) {\r\n      let image = images[0];\r\n      return image;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @returns - Table row with cells\r\n   */\r\n  const view = Products.map((prod, index) => {\r\n    return (\r\n      <TableRow key={index}>\r\n        <TableCell>\r\n          <img\r\n            src={renderProductImage(prod.images)}\r\n            alt=\"productImage\"\r\n            className={styles.productImage}\r\n          />\r\n        </TableCell>\r\n        <TableCell>{prod._id}</TableCell>\r\n        <TableCell>{prod.title}</TableCell>\r\n        <TableCell>{prod.tags}</TableCell>\r\n        <TableCell>\r\n          <Button\r\n            onClick={() => handleUpdate(prod._id)}\r\n            className=\"mr-2\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            update\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleDelete(prod._id)}\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            delete\r\n          </Button>\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  });\r\n\r\n  /**\r\n   * Move to UpdateProduct page with product _id\r\n   * @param {String} productId - Product _id\r\n   */\r\n  const handleUpdate = (productId) => {\r\n    return history.push(`/update-product/${productId}`);\r\n  };\r\n\r\n  /**\r\n   * Delete specific product by _id\r\n   * @param {Strinf} productId - Product _id\r\n   */\r\n  const handleDelete = (productId) => {\r\n    // Alert ask message\r\n    const confirm = window.confirm(\"Would you like to delete this product?\");\r\n    // If \"OK\" pressed get in\r\n    if (confirm) {\r\n      // Send request to server\r\n      http\r\n        .delete(`${apiUrl}/admin/handle-products/deleteProduct?id=${productId}`)\r\n        .then((response) => {\r\n          // Find the index of this product\r\n          let indexId = Products.map((item) => {\r\n            return item._id;\r\n          }).indexOf(productId);\r\n          // Remove product from the array\r\n          Products.splice(indexId, 1);\r\n          // Save deleted product information Object\r\n          // setDeletedProduct(response.data);\r\n          addToast(\"Product deleted successfully\", { appearance: \"success\" });\r\n        })\r\n        .catch((error) => {\r\n          addToast(\"Error: Couldn't delete product\", { appearance: \"error\" });\r\n        });\r\n    }\r\n  };\r\n  // /**\r\n  //  * Restore last deleted product\r\n  //  * @param {Object} DeletedProduct - Last deleted product information\r\n  //  */\r\n  // const undoDelete = (DeletedProduct) => {\r\n  //   // Send request to server\r\n  //   http\r\n  //     .post(`${apiUrl}/admin/handle-products/undoDelete`, DeletedProduct)\r\n  //     .then((response) => {\r\n  //       let product = response.data;\r\n  //       addToast(\"Product restored successfully\", {\r\n  //         appearance: \"success\",\r\n  //       });\r\n  //       setDeletedProduct(false);\r\n  //       // Add restored product to Products array\r\n  //       setProducts([...Products, product]);\r\n  //       // Move to HandleProducts page\r\n  //       window.location = \"/handle-products\";\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       addToast(\"Error: Could't restore Product\", { appearance: \"error\" });\r\n  //     });\r\n  // };\r\n\r\n  /**\r\n   * Filter results by brand\r\n   * @param {Number | String} brandId - Brand _id number , \"all\" string\r\n   */\r\n  const handleBrandFilter = (brandId) => {\r\n    //Send request to server\r\n    http\r\n      .get(`${apiUrl}/admin/handle-products/getAllProducts?filter=${brandId}`)\r\n      .then((response) => {\r\n        // Set Products to new Array.<Object>\r\n        setProducts(response.data);\r\n      })\r\n      .catch((error) => {\r\n        addToast(\"Error: Coludn't get products\", { appearance: \"error\" });\r\n      });\r\n  };\r\n\r\n  /**\r\n   * @returns - Buttons with styles\r\n   */\r\n  const buttons = brands.map((brand) => {\r\n    return (\r\n      <Button\r\n        onClick={() => handleBrandFilter(brand._id)}\r\n        color=\"default\"\r\n        variant=\"contained\"\r\n      >\r\n        {brand.name}\r\n      </Button>\r\n    );\r\n  });\r\n\r\n  // If Noraml user move to Home page\r\n  if (user && user.role === NORMAL) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      <PageHeader>Handle Products</PageHeader>\r\n\r\n      <div className=\"container-fluid\">\r\n        <div className=\"d-flex flex-md-row flex-lg-row flex-xl-row flex-column justify-content-between mb-4\">\r\n          <Button\r\n            onClick={() => handleBrandFilter(\"all\")}\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n          >\r\n            all brands\r\n          </Button>\r\n\r\n          {buttons}\r\n        </div>\r\n        {/* {DeletedProduct && DeletedProduct._id && (\r\n          <Link to=\"#\" onClick={() => undoDelete(DeletedProduct)}>\r\n            <i className=\"fas fa-exclamation-circle\"></i>Undo Delete\r\n          </Link>\r\n        )} */}\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell>Products Image</StyledTableCell>\r\n                <StyledTableCell>ID</StyledTableCell>\r\n                <StyledTableCell>Title</StyledTableCell>\r\n                <StyledTableCell>Tags</StyledTableCell>\r\n\r\n                <StyledTableCell>Handle Product</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{view}</TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HandleProductsPage;\r\n","C:\\MyCode\\client\\src\\components\\admin\\UpdateProduct.jsx",["278","279","280"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport MainContainer from \"../forms/MainContainer\";\r\nimport Form from \"../forms/Form\";\r\nimport Input from \"../forms/Input\";\r\nimport PrimaryButton from \"../forms/PrimaryButton\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport FileUpload from \"../utils/FileUpload\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { UserContext } from \"../../App\";\r\nimport http from \"../../services/httpService\";\r\nimport { apiUrl, userRole } from \"../../config.json\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport SystemUpdateAltIcon from \"@material-ui/icons/SystemUpdateAlt\";\r\nimport PageHeader from \"../utils/PageHeader\";\r\nimport { brands } from \"../../datas\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\n// Items CSS styles\r\nconst useStyles = makeStyles((them) => ({\r\n  root: {\r\n    marginTop: them.spacing(0),\r\n  },\r\n}));\r\n\r\n/**\r\n * Component - UpdateProduct\r\n * @component\r\n * @param {Object} props - Containes product _id in params\r\n */\r\nfunction UpdateProduct(props) {\r\n  const productId = props.match.params.productId;\r\n  const { addToast } = useToasts();\r\n  const user = useContext(UserContext);\r\n  const styles = useStyles();\r\n  const history = useHistory();\r\n  const [Chips, setChips] = useState([]);\r\n  const [images, setImages] = useState(null);\r\n  const [Product, setProduct] = useState({});\r\n\r\n  /**\r\n   * On page load send request to server to get single product by _id\r\n   */\r\n  useEffect(() => {\r\n    http\r\n      .get(`${apiUrl}/admin/update-product/product_by_id?id=${productId}`)\r\n      .then((response) => {\r\n        if (response && response.data) {\r\n          // When server response set Product to the response data\r\n          setProduct(response.data);\r\n          // Set the images to product images\r\n          setImages(response.data.images);\r\n          // Set Chips to product tags\r\n          setChips(response.data.tags);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        addToast(\"Error: Couldn't fetch product from the server\", {\r\n          appearance: \"error\",\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const { register, handleSubmit } = useForm({\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  /**\r\n   * Updates Array of images to new one\r\n   * @param {Array.<String>} newImages - Array of images paths\r\n   */\r\n  const updateImages = (newImages) => {\r\n    setImages(newImages);\r\n  };\r\n\r\n\r\n  /**\r\n   * Send request to server to update existing product\r\n   * @param {Object} data - Values gathered by usForm hook from the inputs\r\n   */\r\n  const onSubmit = async (data) => {\r\n    const { title, description, price, brand } = data;\r\n    if (images.length === 0) {\r\n      setImages(null);\r\n      return addToast(\"Product most contain an image\", {\r\n        appearance: \"error\",\r\n      });\r\n    }\r\n    // If either one not exists, bail\r\n    if (!title || !description || !price || isNaN(brand) || !images) {\r\n      return addToast(\"Please fill all of the fields first!\", {\r\n        appearance: \"error\",\r\n      });\r\n    }\r\n    \r\n    /**\r\n     * ProductInfo object\r\n     * @type {{\r\n     * writer: String,\r\n     * images: Array,\r\n     * tags: Array,\r\n     * title: String,\r\n     * description: String,\r\n     * price: Number,\r\n     * brand: Number\r\n     * }}\r\n     */\r\n    const productInfo = {\r\n      writer: user._id,\r\n      images: images,\r\n      tags: Chips,\r\n      ...data,\r\n    };\r\n\r\n    try {\r\n      await http.put(\r\n        `${apiUrl}/admin/update-product/product_by_id?id=${productId}`,\r\n        productInfo\r\n      );\r\n      addToast(\"Product updated successfuly\", {\r\n        appearance: \"success\",\r\n      });\r\n      // Move to HandleProduct page\r\n      history.push(\"/handle-products\");\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        addToast(error.response.data.error, {\r\n          appearance: \"success\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set the state of Chips to a new one\r\n   * @param {Array.<String>} chips - Array of strings (tags)\r\n   */\r\n  const handleChange = (chips) => {\r\n    setChips(chips);\r\n  };\r\n\r\n  const renderBrands = () => {\r\n    let array = brands.map((item) => {\r\n      if (item._id === Product.brand) {\r\n        return (\r\n          <option selected=\"selected\" key={item._id} value={item._id}>\r\n            {item.name}\r\n          </option>\r\n        );\r\n      } else {\r\n        return (\r\n          <option key={item._id} value={item._id}>\r\n            {item.name}\r\n          </option>\r\n        );\r\n      }\r\n    });\r\n    return array;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader>\r\n        Update Product <SystemUpdateAltIcon fontSize=\"inherit\" />\r\n      </PageHeader>\r\n\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <FileUpload\r\n          oldImages={images}\r\n          updateImages={updateImages}\r\n          productId={productId}\r\n        />\r\n        <MainContainer className={styles.root} maxWidth=\"sm\">\r\n          <input\r\n            defaultValue={Product.title}\r\n            placeholder=\"Title\"\r\n            name=\"title\"\r\n            label=\"Title\"\r\n            id=\"title\"\r\n            ref={register}\r\n            className=\"form-control mb-3\"\r\n          />\r\n          <textarea\r\n            defaultValue={Product.description}\r\n            className=\"form-control\"\r\n            name=\"description\"\r\n            id=\"description\"\r\n            placeholder=\"Prodcut Description\"\r\n            cols=\"50\"\r\n            rows=\"7\"\r\n            ref={register}\r\n          />\r\n          <select\r\n            className=\"form-control mt-3\"\r\n            name=\"brand\"\r\n            id=\"brand\"\r\n            ref={register}\r\n          >\r\n            <option>Choose Brand...</option>\r\n\r\n            {renderBrands()}\r\n          </select>\r\n          <input\r\n            defaultValue={Product.price}\r\n            className=\"form-control mt-3\"\r\n            name=\"price\"\r\n            label=\"Price\"\r\n            id=\"price\"\r\n            placeholder=\"Product Price ( $ )\"\r\n            type=\"number\"\r\n            ref={register}\r\n          />\r\n          <ChipInput\r\n            defaultValue={Product.tags}\r\n            fullWidth\r\n            placeholder=\"+Add_Tag\"\r\n            onChange={(chips) => handleChange(chips)}\r\n            className=\"mt-2\"\r\n            ref={register}\r\n          />\r\n          <PrimaryButton type=\"submit\">Submit</PrimaryButton>\r\n        </MainContainer>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateProduct;\r\n","C:\\MyCode\\client\\src\\components\\brands\\Jordan.jsx",[],"C:\\MyCode\\client\\src\\components\\brands\\Nike.jsx",[],"C:\\MyCode\\client\\src\\components\\brands\\Yeezy.jsx",[],"C:\\MyCode\\client\\src\\components\\brands\\Adidas.jsx",[],"C:\\MyCode\\client\\src\\services\\httpService.js",["281"],"import axios from \"axios\";\r\nimport { getJwt } from \"./userService\";\r\n\r\n// Set x-auth-token as default header\r\naxios.defaults.headers.common[\"x-auth-token\"] = getJwt();\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  patch: axios.patch,\r\n  delete: axios.delete,\r\n};\r\n","C:\\MyCode\\client\\src\\datas.js",[],"C:\\MyCode\\client\\src\\components\\forms\\MainContainer.js",[],"C:\\MyCode\\client\\src\\components\\forms\\Form.js",[],"C:\\MyCode\\client\\src\\components\\forms\\Input.js",[],"C:\\MyCode\\client\\src\\components\\forms\\PrimaryButton.js",[],"C:\\MyCode\\client\\src\\components\\HomePageDetail\\PopularBrands.js",[],"C:\\MyCode\\client\\src\\components\\utils\\PageHeader.jsx",["282"],"import React from \"react\";\r\nimport \"../../css/PageHeader.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((them) => ({\r\n  message: {\r\n    fontSize: \"1.3em\",\r\n    display: \"flex\",\r\n    margin: \"0 auto\",\r\n    fontWeight: \"600\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\nfunction PageHeader({ children, props }) {\r\n  const styles = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"header-container mb-4\">\r\n        <div className=\"container\">\r\n          <div className=\"header-title\" {...props}>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {children == \"Home\" && (\r\n        <div>\r\n          <div className={styles.message}>\r\n            <div>Example Site Products Not For Sale!</div>\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","C:\\MyCode\\client\\src\\components\\utils\\HistoryTable.jsx",[],"C:\\MyCode\\client\\src\\components\\utils\\ImageSlider.jsx",["283"],"import React from \"react\";\r\nimport { Carousel } from \"antd\";\r\nimport {localUrl} from \"../../config.json\"\r\nfunction ImageSlider({ images }) {\r\n  return (\r\n    <div>\r\n      <Carousel autoplay>\r\n        {images.map((image, index) => (\r\n          <div key={index}>\r\n            <img\r\n              style={{ width: \"100%\", maxHeight: \"150px\" }}\r\n              src={image}\r\n              alt=\"productImage\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageSlider;\r\n","C:\\MyCode\\client\\src\\components\\brands\\PageContent.jsx",[],"C:\\MyCode\\client\\src\\components\\productDetails\\ProductInfo.jsx",["284"],"import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\n\r\n\r\n// Items CSS styles\r\nconst useStyles = makeStyles((them) => ({\r\n  root: {\r\n    fontSize: \"1.7em\",\r\n    fontWeight: 600,\r\n    letterSpacing: 1.3,\r\n  },\r\n}));\r\n\r\n/**\r\n * Component - ProductInfo\r\n * @component\r\n * @param {Object} props - Containes product and addToCart function\r\n */\r\nfunction ProductInfo(props) {\r\n  const { addToast } = useToasts();\r\n  const { product, addToCart } = props;\r\n\r\n  const styles = useStyles();\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"row mt-4\">\r\n      <div className=\"col-12 d-lg-flex justify-content-between\">\r\n        <div className=\"col-lg-7\">\r\n          <div>\r\n            <span className={styles.root}>DESCRIPTION:</span>\r\n            <p style={{ letterSpacing: 1.2, fontSize: \"1.2em\" }}>\r\n              {product.description}{\" \"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4 d-flex flex-column\">\r\n          <span className={styles.root}>PRICE: ${product.price}</span>\r\n\r\n          <div className=\"d-flex flex-column\">\r\n            <Button\r\n              onClick={() => addToCart(product._id)}\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n            >\r\n              <i className=\"fas fa-plus mr-2\"></i> Add to cart\r\n            </Button>\r\n            <Button\r\n              onClick={() => addToCart(product._id, 'buyNow')}\r\n              className=\"mt-2\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Buy now\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductInfo;\r\n","C:\\MyCode\\client\\src\\components\\productDetails\\ProductCarousel.jsx",["285"],"import React, { useEffect, useState } from \"react\";\r\nimport ImageGallery from \"react-image-gallery\";\r\n\r\n/**\r\n * Component - ProductCarousel\r\n * @component\r\n * @param {Object} props - Containes product\r\n */\r\nfunction ProductCarousel(props) {\r\n  const { product } = props;\r\n  const [Images, setImages] = useState([]);\r\n\r\n  /**\r\n   * const {product} - Object with single product details\r\n   * On page load create images array\r\n   */\r\n  useEffect(() => {\r\n    // If there's 1 or more image go in\r\n    if (product.images && product.images.length > 0) {\r\n      let images = [];\r\n      // Create array of image Objects\r\n      product.images.map((item) => {\r\n        images.push({\r\n          original: item,\r\n          thumbnail: item,\r\n        });\r\n      });\r\n\r\n      setImages(images);\r\n    }\r\n  }, [product]);\r\n\r\n  return (\r\n    <div>\r\n      <ImageGallery items={Images} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductCarousel;\r\n","C:\\MyCode\\client\\src\\components\\utils\\FileUpload.jsx",["286","287"],"import React, { useState, useEffect } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport http from \"../../services/httpService\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { localUrl, apiUrl } from \"../../config.json\";\r\nimport { projectStorage, db } from \"../../firebase/config\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\n/**\r\n * Component - FileUpload\r\n * @component\r\n * @param {Object} props - containes oldImages and updateImages\r\n */\r\nfunction FileUpload(props) {\r\n  // const [ImageUrls, setImageUrls] = useState([]);\r\n  const oldProductId = props.productId;\r\n  const [File, setFile] = useState(null);\r\n  const [images, setImages] = useState([]);\r\n  const { addToast } = useToasts();\r\n  // Coming from updateImages component\r\n  let oldImages = props.oldImages;\r\n\r\n  useEffect(() => {\r\n    if (oldImages && oldImages.length >= 1) {\r\n      setImages(oldImages);\r\n    }\r\n  }, [props.oldImages]);\r\n\r\n  /**\r\n   * Send request to server to add image file to /public/uploads dir\r\n   * @param {Array.<Object>} files - Array of one image information\r\n   */\r\n  const types = [\"image/png\", \"image/jpeg\"];\r\n\r\n  const onDrop = async (files) => {\r\n    let selected = files[0];\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n    } else {\r\n      return addToast(\"Please select an image file (png or jpeg)\", {\r\n        appearance: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const firebaseDelete = async (image) => {\r\n    const dbRef = await db.collection(\"images\");\r\n    const file = await dbRef.where(\"url\", \"==\", image);\r\n\r\n    let docId;\r\n    let data;\r\n    await file.get().then((snap) => {\r\n      snap.forEach((doc) => {\r\n        docId = doc.id;\r\n        data = doc.data();\r\n      });\r\n    });\r\n    const storageRef = projectStorage.ref();\r\n    const imageRef = storageRef.child(data.fileName);\r\n\r\n    imageRef\r\n      .delete()\r\n      .then(() => {\r\n        console.log(\"Deleted from storage\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Failed storage\", err);\r\n      });\r\n\r\n    dbRef\r\n      .doc(docId)\r\n      .delete()\r\n      .then(() => {\r\n        console.log(\"Deleted Frome Store\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Failed store\", err);\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Delete file on click (create product)\r\n   * @param {String} image - Image File path\r\n   */\r\n  const handleDelete = async (image) => {\r\n    if (oldImages) {\r\n      http.post(`${apiUrl}/products/oldImagesDelete`, { image, oldProductId });\r\n    }\r\n    firebaseDelete(image);\r\n\r\n    const currentIndex = images.indexOf(image);\r\n\r\n    let newImages = [...images];\r\n    // Remove image file from newImages Array\r\n    newImages.splice(currentIndex, 1);\r\n    setImages(newImages);\r\n\r\n    // Pass images to father component\r\n    props.updateImages(newImages);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container d-lg-flex justify-content-center\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"mr-4 mb-2 \">\r\n            <Dropzone onDrop={onDrop} multiple={true} maxSize={80000000}>\r\n              {({ getRootProps, getInputProps }) => (\r\n                <div\r\n                  style={{\r\n                    width: \"300px\",\r\n                    height: \"240px\",\r\n                    border: \"1px solid lightgrey\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  {...getRootProps()}\r\n                >\r\n                  <input {...getInputProps()} />\r\n                  <i className=\"fas fa-plus\" style={{ fontSize: \"4rem\" }}></i>\r\n                </div>\r\n              )}\r\n            </Dropzone>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"351px\",\r\n              height: \"241px\",\r\n              overflowX: \"auto\",\r\n              overflowY: \"hidden\",\r\n              border: \"1px solid lightgrey\",\r\n            }}\r\n          >\r\n            {images.map((image, index) => (\r\n              <div onClick={() => handleDelete(image)} key={index}>\r\n                <img\r\n                  style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n                  src={image}\r\n                  alt={`productImg-${index}`}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {File && (\r\n        <ProgressBar\r\n          file={File}\r\n          setFile={setFile}\r\n          Images={images}\r\n          setImages={setImages}\r\n          updateImages={props.updateImages}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","C:\\MyCode\\client\\src\\components\\productDetails\\CheckBox.jsx",[],"C:\\MyCode\\client\\src\\components\\productDetails\\RadioBox.jsx",[],"C:\\MyCode\\client\\src\\components\\productDetails\\SearchFeature.jsx",[],"C:\\MyCode\\client\\src\\components\\utils\\Paypal.jsx",[],"C:\\MyCode\\client\\src\\components\\cartDetail\\CartTable.jsx",["288","289"],"import React, { useContext } from \"react\";\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  makeStyles,\r\n  withStyles,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { localUrl } from \"../../config.json\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\n// Table cell CSS styles\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#3f51b5\",\r\n    color: theme.palette.common.white,\r\n    fontSize: \"1.1em\",\r\n    fontWeight: 500,\r\n  },\r\n}))(TableCell);\r\n\r\n// Items CSS styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  productImage: {\r\n    width: \"100px\",\r\n  },\r\n  numbers: {\r\n    fontSize: \"1.1em\",\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\n/**\r\n * <pre>\r\n * Component - CartTable\r\n * @component\r\n * @param {Object} props - containes ProductsInfo {Object} and\r\n * removeFromCart {Function}\r\n * </pre>\r\n */\r\nfunction CartTable({ ProductsInfo, removeFromCart }) {\r\n  const styles = useStyles();\r\n  const history = useHistory();\r\n\r\n  /**\r\n   * Return an image path\r\n   * @param {Array.<String>} images - Array of image paths\r\n   * @returns {String} - First image path of the array\r\n   */\r\n  const renderCartImage = (images) => {\r\n    if (images.length > 0) {\r\n      let image = images[0];\r\n      return image;\r\n    }\r\n  };\r\n\r\n  const toProductPage = (productId) => {\r\n    return history.push(`/products/${productId}`);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"left\">Product Image</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Quantity</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Price</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Remove From Cart</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {ProductsInfo.map((prod, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell align=\"left\">\r\n                <Link to=\"#\">\r\n                  <img\r\n                    onClick={() => toProductPage(prod._id)}\r\n                    src={renderCartImage(prod.images)}\r\n                    alt=\"productImage\"\r\n                    className={styles.productImage}\r\n                  />\r\n                </Link>\r\n              </TableCell>\r\n              <TableCell className={styles.numbers} align=\"center\">\r\n                {prod.quantity}\r\n              </TableCell>\r\n              <TableCell className={styles.numbers} align=\"right\">\r\n                ${prod.price}\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <Button\r\n                  onClick={() => removeFromCart(prod._id)}\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  startIcon={<DeleteIcon />}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default CartTable;\r\n","C:\\MyCode\\client\\src\\firebase\\config.js",[],"C:\\MyCode\\client\\src\\components\\utils\\ProgressBar.jsx",["290"],"import React, { useEffect } from \"react\";\r\nimport useStorage from \"../../hooks/useStorage\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nfunction ProgressBar({ file, setFile, setImages, Images, updateImages }) {\r\n  const { Url, Progress } = useStorage(file);\r\n\r\n  useEffect(() => {\r\n    if (Url) {\r\n      setImages([...Images, Url]);\r\n      updateImages([...Images, Url]);\r\n      setFile(null);\r\n    }\r\n  }, [Url, setFile]);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <motion.div\r\n        className=\"progress-bar\"\r\n        initial={{ width: 0 }}\r\n        animate={{ width: Progress + \"%\" }}\r\n      ></motion.div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;\r\n","C:\\MyCode\\client\\src\\hooks\\useStorage.js",["291"],"import React, { useEffect, useState } from \"react\";\r\nimport { db, projectStorage, timestamp } from \"../firebase/config\";\r\n\r\nfunction useStorage(file) {\r\n  const [Progress, setProgress] = useState(0);\r\n  const [Url, setUrl] = useState(null);\r\n  const [Error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const newName = Date.now() + \"_\" + file.name;\r\n    const storageRef = projectStorage.ref(newName);\r\n    const collectionRef = db.collection(\"images\");\r\n    storageRef.put(file).on(\r\n      \"state_change\",\r\n      (snap) => {\r\n        let precentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(precentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        const createdAt = timestamp();\r\n        const fileName = newName;\r\n        collectionRef.add({ url, createdAt, fileName });\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n\r\n  return { Progress, Url, Error };\r\n}\r\n\r\nexport default useStorage;\r\n",{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":31,"column":25,"nodeType":"298","messageId":"299","endLine":31,"endColumn":34},{"ruleId":"296","severity":1,"message":"300","line":35,"column":9,"nodeType":"298","messageId":"299","endLine":35,"endColumn":14},{"ruleId":"301","severity":1,"message":"302","line":15,"column":13,"nodeType":"303","endLine":29,"endColumn":4},{"ruleId":"301","severity":1,"message":"304","line":29,"column":6,"nodeType":"305","endLine":29,"endColumn":8,"suggestions":"306"},{"ruleId":"307","severity":1,"message":"308","line":47,"column":1,"nodeType":"309","endLine":52,"endColumn":3},{"ruleId":"310","severity":1,"message":"311","line":27,"column":17,"nodeType":"312","endLine":31,"endColumn":19},{"ruleId":"310","severity":1,"message":"311","line":94,"column":17,"nodeType":"312","endLine":98,"endColumn":19},{"ruleId":"296","severity":1,"message":"313","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":18},{"ruleId":"296","severity":1,"message":"314","line":5,"column":10,"nodeType":"298","messageId":"299","endLine":5,"endColumn":20},{"ruleId":"315","severity":1,"message":"316","line":53,"column":19,"nodeType":"312","endLine":53,"endColumn":63},{"ruleId":"315","severity":1,"message":"316","line":57,"column":19,"nodeType":"312","endLine":57,"endColumn":66},{"ruleId":"315","severity":1,"message":"316","line":61,"column":19,"nodeType":"312","endLine":61,"endColumn":65},{"ruleId":"315","severity":1,"message":"316","line":65,"column":19,"nodeType":"312","endLine":65,"endColumn":66},{"ruleId":"301","severity":1,"message":"317","line":43,"column":6,"nodeType":"305","endLine":43,"endColumn":8,"suggestions":"318"},{"ruleId":"296","severity":1,"message":"319","line":11,"column":10,"nodeType":"298","messageId":"299","endLine":11,"endColumn":18},{"ruleId":"296","severity":1,"message":"300","line":12,"column":9,"nodeType":"298","messageId":"299","endLine":12,"endColumn":14},{"ruleId":"296","severity":1,"message":"320","line":12,"column":16,"nodeType":"298","messageId":"299","endLine":12,"endColumn":22},{"ruleId":"296","severity":1,"message":"321","line":12,"column":24,"nodeType":"298","messageId":"299","endLine":12,"endColumn":30},{"ruleId":"296","severity":1,"message":"322","line":19,"column":9,"nodeType":"298","messageId":"299","endLine":19,"endColumn":16},{"ruleId":"301","severity":1,"message":"323","line":33,"column":6,"nodeType":"305","endLine":33,"endColumn":8,"suggestions":"324"},{"ruleId":"301","severity":1,"message":"317","line":27,"column":6,"nodeType":"305","endLine":27,"endColumn":8,"suggestions":"325"},{"ruleId":"296","severity":1,"message":"322","line":40,"column":9,"nodeType":"298","messageId":"299","endLine":40,"endColumn":16},{"ruleId":"301","severity":1,"message":"326","line":90,"column":6,"nodeType":"305","endLine":90,"endColumn":12,"suggestions":"327"},{"ruleId":"328","severity":1,"message":"329","line":108,"column":29,"nodeType":"303","messageId":"330","endLine":108,"endColumn":31},{"ruleId":"296","severity":1,"message":"319","line":15,"column":10,"nodeType":"298","messageId":"299","endLine":15,"endColumn":18},{"ruleId":"296","severity":1,"message":"331","line":30,"column":10,"nodeType":"298","messageId":"299","endLine":30,"endColumn":21},{"ruleId":"296","severity":1,"message":"332","line":32,"column":17,"nodeType":"298","messageId":"299","endLine":32,"endColumn":25},{"ruleId":"301","severity":1,"message":"333","line":50,"column":6,"nodeType":"305","endLine":50,"endColumn":8,"suggestions":"334"},{"ruleId":"296","severity":1,"message":"335","line":39,"column":11,"nodeType":"298","messageId":"299","endLine":39,"endColumn":22},{"ruleId":"301","severity":1,"message":"336","line":64,"column":6,"nodeType":"305","endLine":64,"endColumn":8,"suggestions":"337"},{"ruleId":"296","severity":1,"message":"314","line":16,"column":3,"nodeType":"298","messageId":"299","endLine":16,"endColumn":13},{"ruleId":"301","severity":1,"message":"317","line":64,"column":6,"nodeType":"305","endLine":64,"endColumn":8,"suggestions":"338"},{"ruleId":"301","severity":1,"message":"317","line":51,"column":6,"nodeType":"305","endLine":51,"endColumn":8,"suggestions":"339"},{"ruleId":"296","severity":1,"message":"340","line":5,"column":20,"nodeType":"298","messageId":"299","endLine":5,"endColumn":24},{"ruleId":"296","severity":1,"message":"319","line":21,"column":10,"nodeType":"298","messageId":"299","endLine":21,"endColumn":18},{"ruleId":"301","severity":1,"message":"317","line":69,"column":6,"nodeType":"305","endLine":69,"endColumn":8,"suggestions":"341"},{"ruleId":"296","severity":1,"message":"342","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":13},{"ruleId":"296","severity":1,"message":"343","line":11,"column":18,"nodeType":"298","messageId":"299","endLine":11,"endColumn":26},{"ruleId":"301","severity":1,"message":"344","line":62,"column":6,"nodeType":"305","endLine":62,"endColumn":8,"suggestions":"345"},{"ruleId":"307","severity":1,"message":"308","line":7,"column":1,"nodeType":"309","endLine":13,"endColumn":3},{"ruleId":"346","severity":1,"message":"347","line":24,"column":17,"nodeType":"348","messageId":"349","endLine":24,"endColumn":19},{"ruleId":"296","severity":1,"message":"319","line":3,"column":9,"nodeType":"298","messageId":"299","endLine":3,"endColumn":17},{"ruleId":"296","severity":1,"message":"350","line":23,"column":11,"nodeType":"298","messageId":"299","endLine":23,"endColumn":19},{"ruleId":"328","severity":1,"message":"329","line":22,"column":33,"nodeType":"303","messageId":"330","endLine":22,"endColumn":35},{"ruleId":"296","severity":1,"message":"319","line":5,"column":10,"nodeType":"298","messageId":"299","endLine":5,"endColumn":18},{"ruleId":"301","severity":1,"message":"351","line":27,"column":6,"nodeType":"305","endLine":27,"endColumn":23,"suggestions":"352"},{"ruleId":"296","severity":1,"message":"353","line":1,"column":17,"nodeType":"298","messageId":"299","endLine":1,"endColumn":27},{"ruleId":"296","severity":1,"message":"319","line":15,"column":10,"nodeType":"298","messageId":"299","endLine":15,"endColumn":18},{"ruleId":"301","severity":1,"message":"354","line":15,"column":6,"nodeType":"305","endLine":15,"endColumn":20,"suggestions":"355"},{"ruleId":"296","severity":1,"message":"356","line":1,"column":8,"nodeType":"298","messageId":"299","endLine":1,"endColumn":13},"no-native-reassign",["357"],"no-negated-in-lhs",["358"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'ADMIN' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'addToast', 'history', and 'params'. Either include them or remove the dependency array.","ArrayExpression",["359"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Typography' is defined but never used.","'makeStyles' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.",["360"],"'localUrl' is defined but never used.","'EDITOR' is assigned a value but never used.","'NORMAL' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["361"],["362"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["363"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'SearchValue' is assigned a value but never used.","'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Limit' and 'getProducts'. Either include them or remove the dependency array.",["364"],"'DeletedUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addToast', 'url', and 'userId'. Either include them or remove the dependency array.",["365"],["366"],["367"],"'Link' is defined but never used.",["368"],"'Input' is defined but never used.","'userRole' is defined but never used.","React Hook useEffect has missing dependencies: 'addToast' and 'productId'. Either include them or remove the dependency array.",["369"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'addToast' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'oldImages'. Either include it or remove the dependency array.",["370"],"'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'Images', 'setImages', and 'updateImages'. Either include them or remove the dependency array. If 'setImages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["371"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"374","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"374","fix":"385"},{"desc":"374","fix":"386"},{"desc":"374","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},"Update the dependencies array to be: [addToast, history, params]",{"range":"394","text":"395"},"Update the dependencies array to be: [addToast]",{"range":"396","text":"397"},"Update the dependencies array to be: [productId]",{"range":"398","text":"399"},{"range":"400","text":"397"},"Update the dependencies array to be: [cart, user]",{"range":"401","text":"402"},"Update the dependencies array to be: [Limit, getProducts]",{"range":"403","text":"404"},"Update the dependencies array to be: [addToast, url, userId]",{"range":"405","text":"406"},{"range":"407","text":"397"},{"range":"408","text":"397"},{"range":"409","text":"397"},"Update the dependencies array to be: [addToast, productId]",{"range":"410","text":"411"},"Update the dependencies array to be: [oldImages, props.oldImages]",{"range":"412","text":"413"},"Update the dependencies array to be: [Images, Url, setFile, setImages, updateImages]",{"range":"414","text":"415"},[807,809],"[addToast, history, params]",[1367,1369],"[addToast]",[1169,1171],"[productId]",[838,840],[2850,2856],"[cart, user]",[1599,1601],"[Limit, getProducts]",[1821,1823],"[addToast, url, userId]",[1692,1694],[1329,1331],[1774,1776],[2168,2170],"[addToast, productId]",[912,929],"[oldImages, props.oldImages]",[455,469],"[Images, Url, setFile, setImages, updateImages]"]